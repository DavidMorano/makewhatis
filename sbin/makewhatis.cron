#!/usr/extra/bin/ksh
# MAKEWHATIS.CRON

#
# This is meant to run as a CRON job (or some other kind of background
# job) to recreate the WHATIS databases for those MAN directories that
# are writable.  Separate provision needs to be made for those special
# MAN directories that are located in read-only filesystems. Your mileage
# may vary (meaning adapt to your environment as necessary).
#

# Notes:
#
# 1. Handling non-writable MAN directories
#    Non-writable MAN directories can be quite common on some systems.
#    These (non-writable MAN directories) can occur for a variety of
#    reasons that will not be further elaborated here, but which might 
#    otherwise be fairly obvious.
#    There are many ways to handle non-writable MAN directories.
#    One such way (a little bit interesting) is shown below.
#    This is actual code used in the real world, so this method might
#    be useful on your systems also.  It requires that the non-writable
#    MAN directory contains a symbolic link for the file 'whatis'
#    (located immediatly under the top-level directory as per usual)
#    to a known writeable filesystem (or other place) outside of 
#    the read-only MAN directory.  Then when the WHATIS indexing takes
#    place (like with using a script-program like this very one),
#    the program detects that the MAN directory is not writable and
#    in that case proceeds to check if the corresponding 'whatis' file
#    under it is writable.  If the 'whatis' file is writable, the 
#    MAKEWHATIS program is called with the '-o' option to redirect
#    the output to the 'whatis' file.  This action (using the '-o' option)
#    circumvents the normal behavior of the MAKEWHATIS program to 
#    atomically linka new 'whatis' file into place in the corresponding
#    MAN directory. Yes, the operation is not atomic, but if your
#    MAN directory is located on a read-only filesystem, then there 
#    are not going to be any updates of the MAN directory at all
#    while it (the MAN directory) is mounted read-only.  So only
#    a single WHATIS database (contained in the 'whatis" file) need
#    be created anytime a new MAN page is added to the MAN directory
#    (presumably when it is writeable at some point).  Enjoy.
#
# 2. Possible future enhancement
#
#    It is conceivable that a future version of the MAKEWHATIS prorgam
#    might have this above logic incorporated so that the distinction
#    between writable and non-writable MAN directories is more transparent
#    to programs that update the WHATIS database (like this very program
#    here).
#
#

: ${USRLOCAL:=/usr/local}
: ${LOCAL:=/opt/local}
: ${TMPDIR:=/tmp}
export USRLOCAL LOCAL TMPDIR

PP=makewhatis
LF=${HOME}/log/${PP}
PATH=${HOME}/bin:${USRLOCAL}/bin:${LOCAL}/bin:${PATH}
export PATH

function finder {
  integer ex=1
  typeset MDIR=$1
  typeset WI=${MDIR}/whatis
  typeset TF=${TMPDIR}/mwi${$}.out
  find -L $MDIR -newer $WI -print > ${TF}
  if [[ -s ${TF} ]] ; then
    ex=0
  fi
  rm -f ${TF}
  return $ex
} 

function whatisneed {
  typeset MDIR=$1 WI=
  integer ex=1
  if [[ -d "${MDIR}" ]] ; then
    WI=${MDIR}/whatis
    if [[ -w ${MDIR} ]] ; then
      if [[ -r ${WI} ]] ; then
        finder $MDIR
        ex=$?
      else
        ex=0
      fi
    else
      if [[ -w "${WI}" ]] ; then
        finder $MDIR
        ex=$?
      fi
    fi
  fi
  return $ex
}

if haveprogram pathenum ; then
  pathenum MANPATH | while read D ; do
    if [[ -d "${D}" ]] ; then
      if [[ -w ${D} ]] ; then
        if whatisneed $D ; then
          makewhatis $D
        fi
      else
        WI=${D}/whatis
        if [[ -w ${WI} ]] ; then
          if whatisneed $D ; then
	    makewhatis -o ${WI} $D
          fi
        fi
      fi
    fi
  done
else
  print -u 2 "${PP}: could not find the PATHENUM program"
fi

DA=$( date '+%Y%m%d%H%M%S' )
print -- "${PP}\t${DA} makewhatis completed" >> ${LF}


